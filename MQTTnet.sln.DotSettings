<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOR/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOREACH/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_IFELSE/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_WHILE/@EntryValue">Required</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_EMBEDDED_ARRANGEMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_EXPR_MEMBER_ARRANGEMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_INITIALIZER_ARRANGEMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_INVOCATION_PARENS_ARRANGEMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_PROPERTY_PATTERNS_ARRANGEMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_USER_LINEBREAKS/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_ACCESSORHOLDER_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">NEVER</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_ANONYMOUSMETHOD_ON_SINGLE_LINE/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_EMBEDDED_STATEMENT_ON_SAME_LINE/@EntryValue">NEVER</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_INITIALIZER_ON_SINGLE_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_PROPERTY_PATTERN_ON_SINGLE_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_WITHIN_METHOD_CALL_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_WITHIN_METHOD_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_WITHIN_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_AFTER_DECLARATION_LPAR/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_AFTER_INVOCATION_LPAR/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_ARGUMENTS_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_ARRAY_INITIALIZER_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_CHAINED_METHOD_CALLS/@EntryValue">CHOP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_EXTENDS_LIST_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_LIMIT/@EntryValue">180</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_PARAMETERS_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/XmlDocFormatter/KeepUserLineBreaks/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/XmlDocFormatter/ProcessingInstructionAttributesFormat/@EntryValue">OnDifferentLines</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/XmlDocFormatter/TagAttributesFormat/@EntryValue">OnDifferentLines</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpFileLayoutPatterns/Pattern/@EntryValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;
&lt;Patterns xmlns="urn:schemas-jetbrains-com:member-reordering-patterns"&gt;    
  &lt;TypePattern DisplayName="Non-reorderable types"&gt;
    &lt;TypePattern.Match&gt;
      &lt;Or&gt;
        &lt;And&gt;
          &lt;Kind Is="Interface" /&gt;
          &lt;Or&gt;
            &lt;HasAttribute Name="System.Runtime.InteropServices.InterfaceTypeAttribute" /&gt;
            &lt;HasAttribute Name="System.Runtime.InteropServices.ComImport" /&gt;
          &lt;/Or&gt;
        &lt;/And&gt;
        &lt;Kind Is="Struct" /&gt;
        &lt;HasAttribute Name="JetBrains.Annotations.NoReorderAttribute" /&gt;
        &lt;HasAttribute Name="JetBrains.Annotations.NoReorder" /&gt;
      &lt;/Or&gt;
    &lt;/TypePattern.Match&gt;
  &lt;/TypePattern&gt;
  &lt;TypePattern DisplayName="xUnit.net Test Classes" RemoveRegions="All"&gt;
    &lt;TypePattern.Match&gt;
      &lt;And&gt;
        &lt;Kind Is="Class" /&gt;
        &lt;HasMember&gt;
          &lt;And&gt;
            &lt;Kind Is="Method" /&gt;
            &lt;HasAttribute Name="Xunit.FactAttribute" Inherited="True" /&gt;
            &lt;HasAttribute Name="Xunit.TheoryAttribute" Inherited="True" /&gt;
          &lt;/And&gt;
        &lt;/HasMember&gt;
      &lt;/And&gt;
    &lt;/TypePattern.Match&gt;
    &lt;Entry DisplayName="Setup/Teardown Methods"&gt;
      &lt;Entry.Match&gt;
        &lt;Or&gt;
          &lt;Kind Is="Constructor" /&gt;
          &lt;And&gt;
            &lt;Kind Is="Method" /&gt;
            &lt;ImplementsInterface Name="System.IDisposable" /&gt;
          &lt;/And&gt;
        &lt;/Or&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Kind Order="Constructor" /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="All other members" /&gt;
    &lt;Entry Priority="100" DisplayName="Test Methods"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;HasAttribute Name="Xunit.FactAttribute" /&gt;
          &lt;HasAttribute Name="Xunit.TheoryAttribute" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
  &lt;/TypePattern&gt;
  &lt;TypePattern DisplayName="NUnit Test Fixtures" RemoveRegions="All"&gt;
    &lt;TypePattern.Match&gt;
      &lt;And&gt;
        &lt;Kind Is="Class" /&gt;
        &lt;Or&gt;
          &lt;HasAttribute Name="NUnit.Framework.TestFixtureAttribute" Inherited="True" /&gt;
          &lt;HasAttribute Name="NUnit.Framework.TestFixtureSourceAttribute" Inherited="True" /&gt;
          &lt;HasMember&gt;
            &lt;And&gt;
              &lt;Kind Is="Method" /&gt;
              &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;
              &lt;HasAttribute Name="NUnit.Framework.TestCaseAttribute" /&gt;
              &lt;HasAttribute Name="NUnit.Framework.TestCaseSourceAttribute" /&gt;
            &lt;/And&gt;
          &lt;/HasMember&gt;
        &lt;/Or&gt;
      &lt;/And&gt;
    &lt;/TypePattern.Match&gt;
    &lt;Entry DisplayName="Setup/Teardown Methods"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;Or&gt;
            &lt;HasAttribute Name="NUnit.Framework.SetUpAttribute" Inherited="True" /&gt;
            &lt;HasAttribute Name="NUnit.Framework.TearDownAttribute" Inherited="True" /&gt;
            &lt;HasAttribute Name="NUnit.Framework.TestFixtureSetUpAttribute" Inherited="True" /&gt;
            &lt;HasAttribute Name="NUnit.Framework.TestFixtureTearDownAttribute" Inherited="True" /&gt;
            &lt;HasAttribute Name="NUnit.Framework.OneTimeSetUpAttribute" Inherited="True" /&gt;
            &lt;HasAttribute Name="NUnit.Framework.OneTimeTearDownAttribute" Inherited="True" /&gt;
          &lt;/Or&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="All other members" /&gt;
    &lt;Entry Priority="100" DisplayName="Test Methods"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;
          &lt;HasAttribute Name="NUnit.Framework.TestCaseAttribute" /&gt;
          &lt;HasAttribute Name="NUnit.Framework.TestCaseSourceAttribute" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
  &lt;/TypePattern&gt;
  &lt;TypePattern DisplayName="Default Pattern"&gt;
    &lt;Entry Priority="100" DisplayName="Public Delegates"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Access Is="Public" /&gt;
          &lt;Kind Is="Delegate" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry Priority="100" DisplayName="Public Enums"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Access Is="Public" /&gt;
          &lt;Kind Is="Enum" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Static Fields and Constants"&gt;
      &lt;Entry.Match&gt;
        &lt;Or&gt;
          &lt;Kind Is="Constant" /&gt;
          &lt;And&gt;
            &lt;Kind Is="Field" /&gt;
            &lt;Static /&gt;
          &lt;/And&gt;
        &lt;/Or&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Kind Order="Constant Field" /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Fields"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Field" /&gt;
          &lt;Not&gt;
            &lt;Static /&gt;
          &lt;/Not&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Readonly /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Constructors"&gt;
      &lt;Entry.Match&gt;
        &lt;Kind Is="Constructor" /&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Static /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Events"&gt;
      &lt;Entry.Match&gt;
        &lt;Kind Is="Event" /&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Properties, Indexers"&gt;
      &lt;Entry.Match&gt;
        &lt;Or&gt;
          &lt;Kind Is="Property" /&gt;
          &lt;Kind Is="Indexer" /&gt;
        &lt;/Or&gt;
      &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
            &lt;Access Order="Public Internal Protected Private" /&gt;
            &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="All other members"&gt;
      &lt;Entry.SortBy&gt;
        &lt;Access Order="Public Internal Protected Private" /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Nested Types"&gt;
      &lt;Entry.Match&gt;
        &lt;Kind Is="Type" /&gt;
      &lt;/Entry.Match&gt;
    &lt;/Entry&gt;
  &lt;/TypePattern&gt;
&lt;/Patterns&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/FileHeader/FileHeaderText/@EntryValue">Licensed to the .NET Foundation under one or more agreements.
The .NET Foundation licenses this file to you under the MIT license.
See the LICENSE file in the project root for more information.</s:String>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpAttributeForSingleLineMethodUpgrade/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpKeepExistingMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpPlaceEmbeddedOnSameLineMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpRenamePlacementToArrangementMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpUseContinuousIndentInsideBracesMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EAddAccessorOwnerDeclarationBracesMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EAlwaysTreatStructAsNotReorderableMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002ECSharpPlaceAttributeOnSameLineMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateBlankLinesAroundFieldToBlankLinesAroundProperty/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateThisQualifierSettings/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=catched/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=CONNACK/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=PINGREQ/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=PINGRESP/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=PUBACK/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=PUBCOMP/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=PUBREC/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=PUBREL/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=SUBACK/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Tnet/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=unsub/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=UNSUBACK/@EntryIndexedValue">True</s:Boolean></wpf:ResourceDictionary>